{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PPUC, PPUC/DMD and ZeDMD","text":"<p>The Pinball Power-Up Controller software and hardware family is designed to enhance the capabilities of classic pinball machines, mainly of the 80s and 90s, to repair broken machines and to drive the hardware of home brew pinball machines.</p> <p> Click the image to watch the video on YouTube.</p> <p>Meanwhile the PPUC family has grown and the hard and software covers various use-cases, like modding a pinball machine, repairing a pinball machine or to drive homebrew pinball machines.</p> <p>The first PPU Controller was designed to enhance existing machines. It is able to monitor all playfield switches, lights, and solenoids and to trigger and distribute corresponding events to attached sub-systems. It is possible to monitor DMD and sound commands, too.</p> <p>Sub-system like the built-in EffectController are able to drive additional LEDs, motors, and coils. Other sub-systems could be video players or audio systems. The additional effects are bundled per pinball machine in so-called Pinball Power-Ups (PPUs).</p> <p>For homebrew machines there will be additional software to act as \"CPU\", running the game logic aka rules and communicating with the controllers. The target is to use the VPX Standalone script engine and the VPX Standalone ecosytem.</p> <p>A special variation of that \"CPU\" is suitable as replacement for a broken CPU of an existing machine. That development started as part of the PinMAME project. Nowadays it is a standalone programm that leverages libpinmame: https://github.com/PPUC/ppuc</p> <p>As a sub-project ZeDMD has been created to emulate a real DMD for virtual pinball machines and to be used with as replacement in real machines.</p> <p>To get involved in the development or to discuss your PPUC project, join us on Discord.</p>"},{"location":"#motivation","title":"Motivation","text":"<p>We want to enable people to be creative and to modernize old pinball machines using today's technology. Or to get an old broken machine back to work. Our goal is to establish an open and affordable platform for that.</p> <p>Ideally people will publish their game-specific PPUs so others could leverage and potentially improve them. We want to see a growing library of PPUs and a vital homebrew pinball community.</p>"},{"location":"#concept","title":"Concept","text":""},{"location":"#enhancing-modding-an-existing-machine","title":"Enhancing / Modding an existing machine","text":"<p>The Pinball Power-Up Controllers consist of multiple micro controllers to perform several tasks in parallel. The entire system is modular, so you can choose what you really need. The basic setup consists of a controller to capture a pinball's events and another independent one to run effects.</p> <p>We will provide several integrated boards and vendor specific adaptor boards (currently in development: Williams WPC, Data East, Stern SAM and Whitestar).</p> <p>The Effect Controller should be able to drive hundreds (or thousands?) of LEDs, PWM devices, ... in parallel in a non-blocking way.</p> <p> Click the images to watch the videos on YouTube.</p>"},{"location":"#homebrew-machines-or-replacing-a-cpu-and-drivers","title":"Homebrew machines or Replacing a CPU (and drivers)","text":"<p>Still WIP, but the hardware and io-boards firmware gets better and better ;-)</p> <p>A PPUC board can control solonoids, flashers, motors, etc. They could read dedicated switches or a switch matrix. Lamps could als be controlled as dedidicated bulbs or LEDs, as light matrix or as addressable RGB(W) LEDs including after glow effects.</p> <p>Multipe boards can be cascaded to to have enough input and output ports. The communication happens via a BUS and the protocol enhances the DOF protocol which is known from the virtual pinball world.</p> <p> </p> <p>In case of replacing a broken CPU and driver boards, the platform independent PPUC command line tool can run on any old or small computer like a Raspberry Pi and leverages libpinmame to emulate the ROM.</p> <p> Click the image to watch the video on YouTube.</p> <p>It you replace the entire electronics and wiring of an existing machine, a web-based configuration tool could be used to configure your setup.</p> <p>In case of a homebrew machine, the intention is that you design and devolep your pinball machine using VPX. Our plan is to create a special version of VPX Standalone (VPX for Linux, macOS, iOS, Android) to operate the machine. You would have all capabilities like PUP Packs, FlexDMD, etc.</p> <p> Click the image to watch the video on YouTube.</p> <p></p>"},{"location":"#licence","title":"Licence","text":"<p>The code is licenced under GPLv3. Be aware of the fact that your own Pinball Power-Ups (PPUs) need to be licenced under a compatible licence. That doesn't prevent any commercial use, but you need to respect the terms and conditions of GPLv3!</p> <p>We would appreciate contributions to PPUC itself or as game-specific PPUs.</p>"},{"location":"#zedmd","title":"ZeDMD","text":"<p>ZeDMD is a \"real\" DMD for pinball emulations and other use cases, developed as part of the PPUC project. For more details, visit the ZeDMD page.</p> <p> Click the image to watch the video on YouTube.</p>"},{"location":"#other-components-of-the-ppuc-project","title":"Other components of the PPUC project","text":"<p>To reach our goals, we contribute to other projects like VPX Standalone, batocera, libdmdutil, libserum etc. Some libraries and sub-projects that are also leveraged by others are hosted as PPUC projects:</p> <ul> <li>libzedmd</li> <li>libpupdmd</li> <li>libframeutil</li> <li>libserum (concentrate)</li> </ul> <p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"about/help/","title":"First timer's guide to editing PPUC documentation","text":"<p>Hey! You found something that is not documented yet, or that needs to be updated. What a great opportunity to help us improve the documentation!</p> <p>It can sound scary to contribute to the documentation, but it's pretty easy, AND you can feel good that you're \"giving back\" to the PPUC project and the larger pinball maker community.</p> <p>Also, whenever you make a change and submit it, the maintainers of PPUC will review it before it goes live. So you can't accidentally delete the entire site or anything like that. :) Also, you'll have a chance to continue to update and edit your changes before they go live. So there's no reason to be afraid to contribute!</p> <p>We have a whole guide to get you started: How to contribute to PPUC Docs.</p> <p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"about/help_docs/","title":"Contributing to PPUC's Documentation","text":"<p>Want to help make these docs better! Great! We'd love any help, whether it's as small as correcting a typo, adding to a section that isn't clear, adding your own How To guide, or whatever else you want to change.</p>"},{"location":"about/help_docs/#how-this-website-works","title":"How this website works","text":"<p>There's a GitHub repository called PPUC/docs which contains the source code for this website. It's a Material for MkDocs site. Every time a change is made to that repository, a GitHub action runs that builds the site and deploys it to GitHub pages.</p> <p>Making a change (whether it's a simple typo or a major overhaul)</p>"},{"location":"about/help_docs/#to-make-a-quick-change-to-an-existing-page","title":"To make a quick change to an existing page","text":"<p>Quick changes to existing pages can be done right on the web!</p> <p>To do that:</p> <ol> <li>Browse to the page you want to update, and click sparkly magic     wand icon to the right of the page headline. That will link you     to that page in the GitHub repo on GitHub.com.</li> <li>Login to GitHub. (And create an account if you don't have one!)</li> <li>Click the pencil icon in the upper-right corner of the page's text.     This will create a fork of <code>PPUC/doc</code> in your     GitHub account.</li> <li>Make your change, and click the \"Propose file change\". This will     create a pull request. Type a name describing your change, and click     \"Create pull request\".</li> <li>Details and screen shots of this entire process are     here.</li> </ol>"},{"location":"about/help_docs/#to-make-a-suggestion-for-a-new-doc-or-to-point-out-an-error","title":"To make a suggestion for a new doc (or to point out an error)","text":"<p>Even if you don't feel comfortable actually changing or editing docs, you can still tell us about an error in the documentation or suggest new documentation that we should add. To do this:</p> <ol> <li>Go to the \"Issues\" page of the <code>PPUC/docs</code> repository on     GitHub.</li> <li>Create a GitHub account if you don't have one, and/or login.</li> <li>Click the \"New Issue\" button and describe what you'd like us to     fix or add!</li> </ol>"},{"location":"about/help_docs/#how-do-these-docs-work","title":"How do these docs work?","text":"<ul> <li>This website is built using MkDocs, which   is a static site generator for building project documentation.</li> <li>It uses the Material for MkDocs   theme, which is a Material Design theme for MkDocs. 99% of your reading about   how this site works will be here.</li> <li>The navigation structure is completely defined in the   <code>mkdocs.yml</code>. So if you add a page, or want to change the order of   anything, you'll need to edit that file too.</li> </ul>"},{"location":"about/help_docs/#to-clone-the-ppucdocs-repo-locally-to-make-bigger-changes","title":"To clone the PPUC/docs repo locally to make bigger changes","text":"<p>If you want to make bigger changes to the docs, or if you want to download the <code>PPUC/docs</code> repo so you can work on it offline, do the following:</p> <ol> <li>Clone the <code>PPUC/docs</code> repo from GitHub.</li> <li>Install the requirements for the site, by running the following in the root of the repo: <code>pip3 install -r requirements.txt</code></li> <li>Use <code>mkdocs serve</code> to build the site and serve it locally. (You can then browse to <code>http://localhost:8000</code> to view the site.)</li> <li>Makes your changes.</li> <li>Submit your pull     request</li> </ol> <p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"images/icons/","title":"Your Favicon Package","text":"<p>This package was generated with RealFaviconGenerator</p> <p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"ppuc/","title":"PPUC","text":"<p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"ppuc/config_tool/","title":"Config Tool","text":""},{"location":"ppuc/config_tool/#function","title":"Function","text":"<p>The Config Tool is needed to appropriately map the IO-Board inputs and outputs to a ROM in PinMame. The numbers of the inputs and outputs from PinMame are assigned to the inputs and outputs of the IO-Board firmware in the config file. In PinMame, original pinball ROM circuits are emulated. PPUC-Pinmame outputs the events of the circuit and accepts inputs for the emulated ROM. Without a config file, PPUC-Pinmame cannot communicate with the boards.</p>"},{"location":"ppuc/config_tool/#config-file","title":"Config File","text":"<p>The Config Tool outputs a config file as a result. This file has the extension \".yml\". The goal of your work, besides collecting pinball data, is primarily the generation of this file.</p> <p>The YAML format used is very common for configuration files as it is a quasi-standard and easily readable by humans. In YAML, indentation determines which elements belong together and form a group. It is advisable not to edit this file manually, because a line break, a separator, or a space can easily be deleted, moved, or added, making the file unreadable. Caution! Do not modify the file manually.</p>"},{"location":"ppuc/config_tool/#components-of-a-configuration","title":"Components of a Configuration","text":"<p>A configuration file for PPUC-PinMame consists of the following element groups:</p> <ul> <li>Game</li> <li>Boards</li> <li>DIP Switches</li> <li>Switches</li> <li>LED Stripes<ul> <li>Lamps</li> <li>Flashers</li> <li>GI (Global Illumination)</li> </ul> </li> <li>LEDs</li> <li>PWM-Outputs (Pulse Wide Modulation)</li> <li>Mechs</li> </ul> <p>These are the important elements needed for the connection between Pinmame and IO-Boards. Additionally, all information about the pinball machine can be collected and archived in the configuration tool. This includes:</p> <ul> <li>Description</li> <li>Images (png, gif, jpg, jpeg, webp)</li> <li>ROM</li> <li>Manual</li> <li>Lamp Position Plan</li> <li>Switch Position Plan</li> <li>Solenoid Position Plan</li> </ul>"},{"location":"ppuc/config_tool/#first-steps","title":"First Steps","text":""},{"location":"ppuc/config_tool/#important-before-we-begin","title":"Important before we begin","text":"<p>Pinball machines usually have protective functions. Sometimes they are real switches, sometimes switching states in the machine's circuit. If you're building a playfield from scratch, or just want to try out part of the pinball machine, PinMame might not work as expected because you haven't created these states. Conditions are:</p> <ul> <li>Game On Solenoid</li> <li>Coin Door Closed Switch</li> </ul> <p>PinMame uses the inputs of the original ROMs. Therefore, they are manufacturer-specific. E.g., Game On Solenoid: Williams System 3 - 11: 23 Williams WPC: 31 Data East: 23 Sega: 15 Gottlieb System 1: 17 Gottlieb System 80: 10 Gottlieb System 3: 32 Note: Also think about other switches that must be closed before a game starts. For example, whether a ball is in the ball trough. Possibly also whether enough balls are in the ball trough (switch at the last ball).</p>"},{"location":"ppuc/config_tool/#installation-and-launch-of-the-config-tool","title":"Installation and Launch of the Config Tool","text":"<p>Installation instructions</p> <p>..</p>"},{"location":"ppuc/config_tool/#interface","title":"Interface","text":""},{"location":"ppuc/config_tool/#home","title":"Home","text":""},{"location":"ppuc/config_tool/#view","title":"View","text":"<p>Summary of the Game elements.</p>"},{"location":"ppuc/config_tool/#edit","title":"Edit","text":"<p>Edit the inputs that were requested when creating the game. (Title, Description, Platform, Images, ROM, etc.)</p>"},{"location":"ppuc/config_tool/#export","title":"Export","text":"<p>Save directly when clicking on Export. This saves the game completely. This file can be used to create backup copies of all inputs for the currently opened game. The save is placed in the browser's download folder.</p>"},{"location":"ppuc/config_tool/#download-game-config","title":"Download Game Config","text":"<p>Save directly when clicking on Download Game Config. This saves the config file for use in PPUC-PinMame. The save is placed in the browser's download folder.</p>"},{"location":"ppuc/config_tool/#delete","title":"Delete","text":"<p>CAUTION: After confirmation, the currently opened element will be irrevocably deleted. The currently opened element (Game, LED-Stripe, LED, PWM-Device, Board, etc.) is deleted via this button. If you are in the game interface without having selected an element, the game will be deleted. Note when deleting a game: Only the game configuration is deleted. All associated boards, LED-Stripes, etc. remain. These will still be available for selection in the settings. If you want to delete the elements of a game, it's best to delete the subordinate elements first!</p>"},{"location":"ppuc/config_tool/#revision","title":"Revision","text":"<p>PPUC-Config Tool will make different versions of the game available in the future.</p>"},{"location":"ppuc/config_tool/#clone","title":"Clone","text":"<p>Elements such as Boards, LED-Strings, LEDs, etc. can be cloned using this button. This means that the element is cloned with the last saved inputs. You can recognize this by the extended title \"Clone\".</p>"},{"location":"ppuc/config_tool/#creating-a-game","title":"Creating a Game","text":"<p>A new game is created by pressing the \"+ Add Game\" button.</p> <p></p> <p>Now fill in the fields. Required fields are marked with asterisks (). Don't forget that your game may not start if you haven't defined Game On Solenoid and Coin Door Closed Switch*.</p> <p>Another important feature is the Platform.</p> <p></p> <p>The manufacturers of pinball machines developed their systems over time and designed different platforms. The characteristics of the platforms are taken into account through the appropriate selection. There is not yet a separate selection for all platforms. DE = DataEast, SYS11 and SYS4</p> <p>Save the data - You will receive confirmation that your game has been created.</p> <p></p> <p>You will automatically switch to the editor interface of the game.</p>"},{"location":"ppuc/config_tool/#adding-an-io-board","title":"Adding an IO-Board","text":"<ul> <li>Title: Choose a unique title that helps you identify the board.</li> <li>Game: Select the game you created earlier.</li> <li>Number: Enter the number of the I/O Board that you have set on the DIP switch on the board. The number can be set from 0 to 16. It is the address that tells the board it needs to respond to the data communication. </li> <li>Type: Also select the board type here.</li> <li>Note: The board, like other elements, can be assigned to multiple games. This might be important for you later when naming the board to recognize the boards.</li> </ul> <p>Save - don't forget.</p>"},{"location":"ppuc/config_tool/#inputs-and-outputs","title":"Inputs and Outputs","text":"<p>Microcontrollers whose I/O pins are routed outward are located on the boards. These I/O pins are used, among other things, for communication with each other and with the device running PinMame (RS485). The inputs and outputs are used to forward inputs from the pinball device to PinMame and to forward outputs from PinMame to the boards. The structure of the elements is hierarchical. For example, LED-Strings and PWM-Devices are assigned directly to the boards. Lamps, Flashers, and GI, however, are assigned to the LED-String.</p> <p>Hierarchy:</p> <ul> <li>Game<ul> <li>Board<ul> <li>DipSwitch</li> <li>Switch</li> <li>Switch Matrix<ul> <li>Matrix Column</li> <li>Matrix Row</li> </ul> </li> <li>LED String<ul> <li>Lamps</li> <li>Flashers</li> <li>GI</li> </ul> </li> <li>PWM Device</li> </ul> </li> </ul> </li> </ul> <p>After you have created a game and a board, now add the elements.</p>"},{"location":"ppuc/config_tool/#dipswitch","title":"DIPSwitch","text":""},{"location":"ppuc/config_tool/#switch","title":"Switch","text":"<ul> <li>Title: Choose a unique title that helps you identify the board.</li> <li>Number: This number is received by PinMame from the board and evaluated in the simulated ROM. This means that the number must be the same number that is used in the ROM. You can find this number in the manual of the pinball machine.<ul> <li>Number greater than 200: no longer belongs to the PinMame ROM, but is evaluated as Custom Switches (user-defined switches). These can trigger events in VPX-Boards in the future.</li> <li>Numbers greater than 240: are evaluated by PinMame as negative numbers. 240 is automatically subtracted from this number and a negative sign is prefixed. Examples: 241= -(241-240) = -1, 243 = -3, 260 = -20</li> </ul> </li> <li>I/O Board: The I/O board to which the switch is connected.</li> <li>Port: The number of the input on the I/O board.</li> </ul>"},{"location":"ppuc/config_tool/#switch-matrix","title":"Switch Matrix","text":""},{"location":"ppuc/config_tool/#matrix-column","title":"Matrix Column","text":""},{"location":"ppuc/config_tool/#matrix-row","title":"Matrix Row","text":""},{"location":"ppuc/config_tool/#led-string","title":"LED String","text":"<p>This controls WS2811, WS2812, and other addressable LEDs, also RGBW like SK6812. It doesn't have to be a chain. It can also be strips, or individual LEDs that are connected to each other in another way. The principle of these LEDs, however, is to form a continuous chain, in which the data line only goes in one direction and only as one strand, never in a circle. For control, data is sent to the corresponding LED. This data packet passes by all connected LEDs. Only the LED with the corresponding number responds.</p> <p> Title: Choose a unique title that helps you identify the light chain. I/O Board: The I/O board to which the LED chain is connected. Port: Port number of the board to which the LED chain is connected. For the I/O Boards 16-8-1, this is port 25. See the labeling on the board:  LED Type: Here the color type is specified. Whether RGB, GBR, BRG, RGBW, and so on... The transferred color values are put into the right order with this. Amount of LEDs: Number of LEDs in the chain.</p>"},{"location":"ppuc/config_tool/#segments","title":"Segments","text":"<p>The light chain can be divided into segments. This serves to apply animated light effects to certain sections of the chain. These effects are predefined and stored in the firmware of the boards and can be triggered. From - to defines the position of the first and last LED of the respective section in the chain.</p>"},{"location":"ppuc/config_tool/#light","title":"Light","text":"<ul> <li>After Glow (Milliseconds): The brightness of the LED is faded out and not switched off abruptly. This simulates the behavior of the incandescent lamps of the old devices.</li> <li>Light Up (Milliseconds): The brightness of the LED is faded in and not switched on abruptly. This simulates the behavior of the incandescent lamps of the old devices.</li> <li>Brightness (0-255): Defines the brightness of the entire LED chain.</li> </ul>"},{"location":"ppuc/config_tool/#led","title":"LED","text":"<p>Add LEDs to your LED chain. You can create each LED individually, or use the Clone function to adopt parameters.</p> <p></p> <ul> <li>Title: Choose a unique title that helps you identify the lamp.</li> <li>Role: Here you select the type of imitated lamp of the pinball machine. There are Lamp, Flasher (5V), GI. See the description of the lamp types a bit further down.</li> <li>Color (255, 255, 255): Here you can determine the color value of the lamp. Note that this also makes the lamp darker if values are below 255.</li> <li>String: Here you select the previously created light chain to which this LED belongs.</li> <li>String Position: The position number of the LED in the order of the data line of the chain.</li> <li>Number: This number is received by the board from PinMame from the simulated ROM. This means that the number must be the same number that is also used in the ROM to control this lamp. You can find this number in the manual of the pinball machine.</li> </ul>"},{"location":"ppuc/config_tool/#lamps","title":"Lamps","text":"<p>Lamps are LEDs that are controlled and display certain game states and events.</p>"},{"location":"ppuc/config_tool/#flashers","title":"Flashers","text":"<p>Flashers are LEDs that draw attention to game events in a particularly effective and bright way.</p>"},{"location":"ppuc/config_tool/#gi","title":"GI","text":"<p>GI means Global Illumination. This is the basic lighting of the pinball machine and not every LED is specifically controlled. Usually, the GI light is switched on as soon as the game starts.</p>"},{"location":"ppuc/config_tool/#pwm-device","title":"PWM Device","text":"<p>PWM Device refers to the electromagnets or other pinball hardware (usually installed on the playfield) that are controlled at the I/O-Board outputs with higher voltage. This also includes particularly bright lamps and flashers. For example, up to 60 volts for the I/O-Board 16-1-1.</p> <p>Pulse Width Modulation (PWM) is a technique where the output voltage is regulated by rapidly switching the current flow on and off and varying the on-time (pulse width). A longer on-pulse results in a higher average output voltage, while a shorter pulse creates a lower voltage. This method allows efficient and precise control of power output. PWM is also used to keep the output voltage stable, even if the load changes. In addition, it allows the control of LED brightness, motor speed, and power output to many other electronic devices.</p> <p></p> <ul> <li>Title: Choose a unique title that helps you identify the PWM-Device.</li> <li>Type: Since there are different types of controllable hardware with higher voltage, select the corresponding type here.</li> <li>Number: This number is received by the board from PinMame from the simulated ROM. This means that the number must be the same number that is also used in the ROM to control this hardware. You can find this number in the manual of the pinball machine.</li> <li>I/O Board: The I/O board to which the LED chain is connected.</li> <li>Port: The number of the output to which the hardware to be addressed is connected. Example I/O-Board 16-1-1: </li> </ul> <p></p> <ul> <li>Power (0-255): 0 = 0 Volt. 255 = full power supply performance (pay attention to the max allowed voltage). Values between 0 and 255 reduce the power supply voltage.</li> <li>Note: The power supply voltage does not reduce linearly! You must measure the voltage corresponding to the value before using it.</li> <li>Hold Power (0-255): With Hold Power, the power supply voltage can be reduced after the power under Power has been reached. This can be used, for example, to pull flipper fingers with full power and then hold them with reduced voltage to protect or spare the coil from burning out. The voltage is determined in the same way as the Power voltage.</li> <li>Hold Power activation time: The time for which the full voltage is applied and from then on the reduced holding voltage is switched on.</li> <li>Min Pulse Time (ms): ? ? ?</li> <li>Max Pulse Time (ms): After this set time, the voltage at the output is set to 0. This function serves to protect the hardware at this output from overheating. E.g. if there is a software error. Or if a linked input does not send the signal to turn off the output.</li> <li>Fast activation switch: This function serves to directly connect a switch with an output. A previously defined switch is selected in this dropdown field. The switch triggers the output directly via the board. For this, the detour via PinMame is not taken. E.g. for the fastest possible reaction time. Additional effects can also be built in, or the software can be changed. For example, a bumper can be implemented with it, without the software having to recognize and trigger it. But the fastest reaction of the solenoids of the flipper fingers to the flipper buttons can also be implemented with this. Note: The switch and the output must both be on the same board. And not all inputs are for ...???</li> </ul>"},{"location":"ppuc/config_tool/#typical-example-settings","title":"Typical Example Settings:","text":"<p>Warning: simply copying these examples can damage the hardware!</p> <p>Flipper Fingers: Bumper: Drop Target Up: Outhole:</p>"},{"location":"ppuc/config_tool/#view_1","title":"View","text":"<p>Here you'll always have an overview of all elements added to the game. You can also edit them directly by clicking Edit.</p> <p></p>"},{"location":"ppuc/config_tool/#config-file-export","title":"Config File Export","text":"<p>This button in the side header of a selected game saves the complete information that has been added to the game. The file name is generated from the Game Title. The file is written in plain text in YAML format. You use this file with PPUC-Pinmame. With this, the PPUC part in PinMame learns the structure of the board configuration. You can create different configurations and use them in PPUC-Pinmame.</p>"},{"location":"ppuc/config_tool/#save-configuration-completely","title":"Save Configuration Completely","text":"<p>This button in the side header of a selected game saves the complete information that has been added to the game. The file name is strangely long, but this makes it unique and machine-readable. You should regularly create a backup using this button. After triggering the button, the file is immediately saved to the browser's download folder. This file can be loaded later (Game Import) or passed on. The file is not saved in plain text and includes ROM and image files.</p>"},{"location":"ppuc/config_tool/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with your configuration, here are some common problems and solutions:</p> <ul> <li>If PinMame does not respond to your inputs, double-check that your Game On Solenoid and Coin Door Closed Switch are properly configured</li> <li>Verify that board numbers and port assignments match your physical hardware setup</li> <li>For LED chains that don't light up correctly, confirm the LED Type setting matches your actual hardware (RGB vs GRB, etc.)</li> <li>When using PWM devices, start with low power values and gradually increase to avoid damaging components</li> <li>Remember to save your configuration regularly using the Export button to avoid losing your work</li> </ul> <p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"},{"location":"zedmd/","title":"ZeDMD","text":"<p>Something missing or wrong? You can fix it!</p> <p>This website is edited by people like you! Is something wrong or missing? Is something out of date, or can you explain it better?</p> <p>Please help us! You can fix it yourself and be an official \"open source\" contributor!</p> <p>It's easy! See our [Beginner's guide to editing the docs]/docs/about/help).</p> Page navigation via the keyboard: &lt; &gt; <p>You can navigate this site via the keyboard. There are two modes:</p> <p>General navigation, when search is not focused:</p> <ul> <li>F , S , / : open search dialog</li> <li>P , , : go to previous page</li> <li>N , . : go to next page</li> </ul> <p>While using the search function:</p> <ul> <li>Down , Up : select next / previous result</li> <li>Esc , Tab : close search</li> <li>Enter : go to highlighted page in the results</li> </ul>"}]}